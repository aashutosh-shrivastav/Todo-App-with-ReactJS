{"version":3,"sources":["components/Form.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","setInputText","todos","setTodos","inputText","setStatus","value","onChange","e","target","type","className","onClick","preventDefault","text","completed","id","Math","random","name","TodoList","Todo","filteredTodos","map","todo","item","filter","el","App","useState","status","setFilterTodos","useEffect","getLocalTodos","filterHandaler","saveLocalTodos","localStorage","setItem","JSON","stringify","getItem","todoLocal","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NAgDeA,EA3CF,SAAC,GAAwD,IAAvDC,EAAsD,EAAtDA,aAAaC,EAAyC,EAAzCA,MAAMC,EAAmC,EAAnCA,SAASC,EAA0B,EAA1BA,UAAUC,EAAgB,EAAhBA,UAuBjD,OACI,iCACI,uBAAOC,MAASF,EAAWG,SAtBR,SAACC,GAExBP,EAAaO,EAAEC,OAAOH,QAoBuCI,KAAO,QAAQC,UAAY,eACpF,wBAAQC,QAlBW,SAACJ,GACxBA,EAAEK,iBAEFV,EAAS,GAAD,mBACDD,GADC,CACM,CAACY,KAAMV,EAAUW,WAAW,EAAMC,GAAoB,IAAfC,KAAKC,aAG1DjB,EAAa,KAW6BU,UAAY,cAAcD,KAAO,SAAvE,SACI,mBAAGC,UAAY,yBAEnB,qBAAKA,UAAY,SAAjB,SACI,yBAAQJ,SAXG,SAACC,GACpBH,EAAUG,EAAEC,OAAOH,QAUyBa,KAAM,QAAQR,UAAY,cAA9D,UACI,wBAAQL,MAAQ,MAAhB,iBACA,wBAASA,MAAQ,YAAjB,uBACA,wBAASA,MAAQ,cAAjB,kC,OCqBLc,EAxDG,SAAC,GAAwC,IAAvClB,EAAsC,EAAtCA,MAAOC,EAA+B,EAA/BA,SAGjBkB,EAHgD,EAArBC,cAGLC,KAAI,SAAAC,GAkB5B,OACI,sBAAKb,UAAY,OAAjB,UACI,oBAAqBA,UAAS,qBAAkBa,EAAKT,UAAY,aAAe,IAAhF,SACIS,EAAKV,MADGU,EAAKR,IAGjB,wBAAQJ,QAlBS,WACrBT,EACID,EAAMqB,KAAI,SAACE,GACP,OAAGA,EAAKT,KAAMQ,EAAKR,GACR,2BACAS,GADP,IACYV,WAAaU,EAAKV,YAG3BU,OAU0Bd,UAAY,eAAjD,SAAgE,mBAAGA,UAAY,mBAC/E,wBAAQC,QAvBM,WAClBT,EAASD,EAAMwB,QAAO,SAACC,GAAD,OAAQA,EAAGX,KAAOQ,EAAKR,QAsBPL,UAAY,YAA9C,SAA0D,mBAAGA,UAAY,yBAoBrF,OACI,qBAAKA,UAAY,iBAAjB,SACI,oBAAIA,UAAU,YAAd,SACKU,OCsBFO,MAtEf,WAAe,MAEqBC,mBAAS,IAF9B,mBAENzB,EAFM,KAEKH,EAFL,OAGa4B,mBAAS,IAHtB,mBAGN3B,EAHM,KAGAC,EAHA,OAImB0B,mBAAS,OAJ5B,mBAINC,EAJM,KAIIzB,EAJJ,OAK0BwB,mBAAS,IALnC,mBAKNP,EALM,KAKQS,EALR,KAQfC,qBAAW,WAETC,MACA,IAEFD,qBAAU,WAERE,IACAC,MACA,CAACjC,EAAM4B,IAIP,IAAMI,EAAiB,WAErB,OAAOJ,GACL,IAAK,YACHC,EAAe7B,EAAMwB,QAAO,SAAAF,GAAI,OAAuB,IAAnBA,EAAKT,cACzC,MACF,IAAK,cACDgB,EAAe7B,EAAMwB,QAAO,SAAAF,GAAI,OAAuB,IAAnBA,EAAKT,cACzC,MACJ,QACEgB,EAAe7B,KAOfiC,EAAiB,WACrBC,aAAaC,QAAQ,QAAUC,KAAKC,UAAUrC,KAGzC+B,EAAgB,WACrB,GAAmC,OAAhCG,aAAaI,QAAQ,SACtBJ,aAAaC,QAAQ,QAAQC,KAAKC,UAAU,SACvC,CACL,IAAIE,EAAYH,KAAKI,MAAMN,aAAaI,QAAQ,UAChDrC,EAASsC,KAIb,OACE,sBAAK9B,UAAU,MAAf,UACE,iCACE,qDAEF,cAAC,EAAD,CAAOV,aAAkBA,EAClBC,MAASA,EACTC,SAAYA,EACZC,UAAaA,EACbC,UAAaA,IAEpB,cAAC,EAAD,CAAUH,MAASA,EAClBC,SAAaA,EACbmB,cAAiBA,QCzDTqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3e90cc73.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\n\r\n\r\nconst Form = ({setInputText,todos,setTodos,inputText,setStatus}) =>  {\r\n\r\n\r\n    const inputTextHandler  =  (e)  =>  {\r\n        \r\n        setInputText(e.target.value);\r\n    }\r\n\r\n    const submitTodoHandler  = (e)  =>  {\r\n        e.preventDefault();\r\n\r\n        setTodos([\r\n            ...todos, {text :inputText,completed: false,id : Math.random()* 1000}\r\n        ]);\r\n\r\n        setInputText('');\r\n\r\n    }\r\n\r\n    const statusHandaler = (e) =>{\r\n        setStatus(e.target.value);\r\n    }\r\n\r\n    return(\r\n        <form>\r\n            <input value = {inputText} onChange = {inputTextHandler} type = \"text \" className = \"todo-input\" />\r\n            <button onClick = {submitTodoHandler} className = \"todo-button\" type = \"submit\" >\r\n                <i className = \"fas fa-plus-square\"></i>\r\n            </button>\r\n            <div className = \"select\">\r\n                <select onChange ={ statusHandaler} name= \"todos\" className = \"filter-todo\">\r\n                    <option value = \"all\" >All</option>\r\n                    <option  value = \"completed\" >Completed</option>\r\n                    <option  value = \"uncompleted\" >Uncompleted</option>\r\n\r\n                </select>\r\n            </div>\r\n        </form>\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default Form ; ","import React from 'react';\r\n\r\n\r\nconst TodoList  = ({todos ,setTodos, filteredTodos})  =>  {\r\n\r\n\r\n    const Todo  = filteredTodos.map(todo =>{\r\n        const deleteHandler = ()  =>{\r\n            setTodos(todos.filter((el) => el.id  !==todo.id));\r\n        }\r\n\r\n        const completeHandaler = ()=>{\r\n            setTodos(\r\n                todos.map((item)=>{\r\n                    if(item.id=== todo.id){\r\n                        return {\r\n                            ...item,completed : !item.completed\r\n                        }\r\n                    }\r\n                    return item;\r\n                })\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div className = \"todo\" >\r\n                <li key  = {todo.id} className = {`todo-item  ${todo.completed ? \"completed \" : \"\"}`}>\r\n                   {todo.text}\r\n                </li>\r\n                <button onClick = {completeHandaler} className = \"complete-btn\"><i className = \"fas fa-check\" ></i></button>\r\n                <button onClick = {deleteHandler} className = \"trash-btn\"><i className = \"fas fa-trash\" ></i></button>\r\n\r\n            </div>\r\n        );\r\n    });\r\n/*\r\n    const Todo = () => {\r\n\r\n        return(\r\n            <div className = \"todo\" >\r\n                <li className = \"todo-item\">\r\n                    HEYY\r\n                </li>\r\n                <button className = \"complete-btn\"><i className = \"fas fa-check\" ></i></button>\r\n                <button className = \"trash-btn\"><i className = \"fas fa-trash\" ></i></button>\r\n\r\n            </div>\r\n        );\r\n    }\r\n*/\r\n    return(\r\n        <div className = \"todo-container\">\r\n            <ul className=\"todo-list\">\r\n                {Todo}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TodoList;","import './App.css';\nimport React , {useEffect, useState  } from 'react';\n//importing form \nimport Form from './components/Form';\nimport TodoList from './components/TodoList';\nfunction App() {\n  //use  states\n  const [inputText ,setInputText] = useState(\"\");\n  const [todos,setTodos]  = useState([]);\n  const [status  , setStatus ]  = useState(\"all\");\n  const [filteredTodos,setFilterTodos] = useState([]);\n//use effects\n \nuseEffect (()=>{\n  //console.log(\"effect with [] \");\n  getLocalTodos();\n},[]);\n\nuseEffect(()=>{\n  \n  filterHandaler();\n  saveLocalTodos();\n},[todos,status]);\n\n\n  //function\n  const filterHandaler = ()=>{\n\n    switch(status) {\n      case \"completed\" :\n        setFilterTodos(todos.filter(todo => todo.completed === true));\n        break;\n      case \"uncompleted\" :\n          setFilterTodos(todos.filter(todo => todo.completed === false));\n          break;\n      default : \n        setFilterTodos(todos)  ;\n        break;\n    }\n\n  }\n  //save to local\n\n  const saveLocalTodos = ()=>{\n    localStorage.setItem(\"todos\" , JSON.stringify(todos));\n  }\n\n  const  getLocalTodos = ()=>{\n    if(localStorage.getItem(\"todos\")===null){\n      localStorage.setItem(\"todos\",JSON.stringify([]));\n    } else {\n      let todoLocal = JSON.parse(localStorage.getItem(\"todos\"));\n      setTodos(todoLocal);\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Your's To-Do List</h1>\n      </header>\n      <Form  setInputText  = { setInputText}\n             todos = {todos} \n             setTodos = {setTodos}\n             inputText = {inputText}\n             setStatus = {setStatus}\n      />\n      <TodoList todos = {todos}\n       setTodos  = {setTodos}\n       filteredTodos = {filteredTodos}\n        />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}